"""add_price_tracking_tables

Revision ID: ea40976b5547
Revises: 6c01efd96f75
Create Date: 2025-07-06 20:15:02.312244

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ea40976b5547'
down_revision: Union[str, Sequence[str], None] = '6c01efd96f75'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create vendors table
    op.create_table('vendors',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('url', sa.String(), nullable=True),
        sa.Column('api_endpoint', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Create price_history table
    op.create_table('price_history',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('card_id', sa.String(), nullable=False),
        sa.Column('vendor_id', sa.String(), nullable=False),
        sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column('currency', sa.String(), nullable=False),
        sa.Column('condition', sa.String(), nullable=True),  # NM, LP, MP, etc.
        sa.Column('rarity', sa.String(), nullable=True),
        sa.Column('set_code', sa.String(), nullable=True),
        sa.Column('recorded_at', sa.DateTime(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['card_id'], ['cards.id'], ),
        sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Create price_alerts table for user notifications
    op.create_table('price_alerts',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('user_id', sa.String(), nullable=False),
        sa.Column('card_id', sa.String(), nullable=False),
        sa.Column('target_price', sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column('alert_type', sa.String(), nullable=False),  # 'above', 'below', 'change'
        sa.Column('is_active', sa.Boolean(), nullable=False, default=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['card_id'], ['cards.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Create indexes for better performance
    op.create_index('idx_price_history_card_vendor', 'price_history', ['card_id', 'vendor_id'])
    op.create_index('idx_price_history_recorded_at', 'price_history', ['recorded_at'])
    op.create_index('idx_price_alerts_user_card', 'price_alerts', ['user_id', 'card_id'])
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_price_alerts_user_card', table_name='price_alerts')
    op.drop_index('idx_price_history_recorded_at', table_name='price_history')
    op.drop_index('idx_price_history_card_vendor', table_name='price_history')
    op.drop_table('price_alerts')
    op.drop_table('price_history')
    op.drop_table('vendors')
    # ### end Alembic commands ###
