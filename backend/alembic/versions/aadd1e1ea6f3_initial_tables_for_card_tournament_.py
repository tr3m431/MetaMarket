"""Initial tables for Card, Tournament, Decklist

Revision ID: aadd1e1ea6f3
Revises: 
Create Date: 2025-07-04 14:28:40.531581

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'aadd1e1ea6f3'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cards',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('attribute', sa.String(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('race', sa.String(), nullable=True),
    sa.Column('attack', sa.Integer(), nullable=True),
    sa.Column('defense', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('imageUrl', sa.String(), nullable=True),
    sa.Column('rarity', sa.String(), nullable=True),
    sa.Column('set', sa.String(), nullable=True),
    sa.Column('setCode', sa.String(), nullable=True),
    sa.Column('cardNumber', sa.String(), nullable=True),
    sa.Column('isReprint', sa.Boolean(), nullable=True),
    sa.Column('isBanned', sa.Boolean(), nullable=True),
    sa.Column('isLimited', sa.Boolean(), nullable=True),
    sa.Column('isSemiLimited', sa.Boolean(), nullable=True),
    sa.Column('createdAt', sa.String(), nullable=True),
    sa.Column('updatedAt', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tournaments',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('date', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('format', sa.String(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('topCut', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('decklists',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('tournamentId', sa.String(), nullable=True),
    sa.Column('player', sa.String(), nullable=True),
    sa.Column('placement', sa.Integer(), nullable=True),
    sa.Column('deckType', sa.String(), nullable=True),
    sa.Column('mainDeck', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('extraDeck', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('sideDeck', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['tournamentId'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('decklists')
    op.drop_table('tournaments')
    op.drop_table('cards')
    # ### end Alembic commands ###
